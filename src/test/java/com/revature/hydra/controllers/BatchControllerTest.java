package com.revature.hydra.controllers;

import org.apache.log4j.Logger;
import org.junit.Test;
import org.springframework.boot.context.embedded.LocalServerPort;
import org.springframework.boot.test.context.SpringBootTest;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectWriter;
import com.revature.hydra.entities.Trainee;
import com.revature.hydra.entities.User;

import io.restassured.module.mockmvc.RestAssuredMockMvc.*;
import io.restassured.module.mockmvc.matcher.RestAssuredMockMvcMatchers.*;

/*
 * JUnit Test Suite for Batch Controller using Rest Assured, and Mock MVC Controllers
 * on a Random Port generated by Spring Boot's Web Environment
 */
@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
public class BatchControllerTest {
	Logger log = Logger.getRootLogger();
	static Trainee tr = new Trainee();
	static User u = new User();
	static String json = "";
	static ObjectMapper om = new ObjectMapper();
	static ObjectWriter ow = om.writer().withDefaultPrettyPrinter();

	RestAssuredMockMvc.
	
	RestAssuredMockMvc.standaloneSetup(new BatchController());

	@LocalServerPort
	private static int port;

	// Returns a specific Trainee given a specific Batch and Status
	@Test
	public void testFindAllByBatchAndStatus() {
		log.warn("Testing findAllByBatchAndStatus");

		given().body(json).header("Content-Type", "application/json")
				.get("trainees/batch/" + tr.getBatches().get(0).getBatch_id() + "/status/" + tr.getTrainingStatus())
				.then().statusCode(200).body("$", hasItems(tr));
	}

}
